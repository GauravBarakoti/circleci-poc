version: 2.1
# jobs:
  # test:
  #   docker:
  #     - image: cimg/python:3.10
  #   steps:
  #     - checkout
      # - run: python3 Flask_application.py
# workflows:
#   first:
#     jobs:
#       - test
# version: 2.1
# jobs:
#   build:
#     docker:
#       - image: cimg/python:3.10
#     steps:
#       - checkout
#       - run: pip install Flask
#       - run: python -m venv venv
#       - run: 
#           command: |
#             source venv/bin/activate
#             pip install Flask
#             python Flask_application.py
#   runner-test:
#     machine: true
#     resource_class: k8vhsqovhlv8kmbfzecxgd/docker
#     steps:
#       - run: echo "Hi I'm on Runners!"

# workflows:
#   build-deploy:
#     jobs:
#       - build
#       - runner-test
#         requires:
#           - build


# version: 2.1
# jobs:
#   build:
#     docker:
#       - image: cimg/python:3.10
#     steps:
#       - checkout
#       - run: pip install Flask
#       - run: python -m venv venv
#       - run: 
#           command: |
#             source venv/bin/activate
#             pip install Flask
#             python Flask_application.py
#   runner-test:
#     machine: true
#     resource_class: k8vhsqovhlv8kmbfzecxgd/docker
#     steps:
#       # - run: echo "Hi I'm on Runners!"
#       - checkout
#       # - run: pip install Flask
#       # - run: python -m venv venv
#       - run: 
#           command: |
#             sudo docker build -t mysampleimage .
#             sudo docker run -d mysampleimage

# common-env-vars: &common-env-vars
#   PASSWORD: ongraph@123

# workflows:
#   version: 2
#   build-deploy:
#     jobs:
#       - build
#       - runner-test:
#           requires:
#             - build

# version: 2.1
# jobs:
#   build:
#     docker:
#       - image: docker:17.05.0-ce-git
#     steps:
#       - checkout
#       - setup_remote_docker
#       - run: 
#           command: |
#             docker build --tag mysampleimage .
#             docker run -d mysampleimage
#   runner-test:
#     machine: true
#     # environment: *common-env-vars
#     resource_class: k8vhsqovhlv8kmbfzecxgd/docker
#     steps:
#       - checkout
#       - run: 
#           command: |
#             docker build --tag mysampleimage .
#             docker run -d mysampleimage

# jobs:
#   runner-deploy:
#     machine: true
#     resource_class: k8vhsqovhlv8kmbfzecxgd/docker
#     working_directory: ~/my-app
#     steps:
#       - checkout
#       - run: 
#           command: |
#             docker build -t mysampleimage .
#       - when:
#           condition: >-
#             (docker ps --filter name=circlecontainer -aq) != ""
#           steps:
#             - run: docker container stop $(docker ps --filter name=circlecontainer -aq)
#             - run: docker container rm $(docker ps --filter name=circlecontainer -aq)
#       - run: docker container run --name circlecontainer -d mysampleimage

# workflows:
#   version: 2
#   build-deploy:
#     jobs:
#       - runner-deploy


            # if [[ "$(docker ps --filter name=circlecontainer -aq)" -ne 0 ]]; then docker container stop $(docker ps --filter name=circlecontainer -aq) ; fi
            # if [[ "$(docker ps --filter name=circlecontainer -aq)" -ne 0 ]]; then docker container rm $(docker ps --filter name=circlecontainer -aq) ; fi
            # docker container run --name circlecontainer -d mysampleimage 



            # docker build -t mysampleimage .
            # if [ $(docker ps --filter name=circlecontainer -aq) -ne null ]; then
              
            # fi
            # docker container run --name circlecontainer -d mysampleimage


jobs:
  runner-deploy:
    machine: true
    resource_class: k8vhsqovhlv8kmbfzecxgd/docker
    working_directory: ~/my-app
    # will be available in the circleci user
    steps:
      - checkout
      # - run:
      #     name: Remove previous Image If Any
      #     command: |
      #       if [[ "$(docker images --filter "dangling=true" -q)" != "" ]]; then
      #         docker image rm $(docker images --filter "dangling=true" -q)
      #       fi
      - run: 
          name: Build Docker Image
          command: docker build -t mysampleimage:${CIRCLE_BUILD_NUM} .
          # fix this with image tag and keep 2 previous version of the image
      - run:
          name: Stop and Remove Container first
          command: |
            if [[ "$(docker ps --filter name=first -aq)" != "" ]]; then
              docker container stop $(docker ps --filter name=first -aq)
              sleep 5
              docker container rm $(docker ps --filter name=first -aq)
            fi
      - run:
          name: Apache2 reload
          command: echo ${PASSWORD} | sudo systemct reload apache2

      - run: 
          name: Run Container 1
          command: docker container run --name first -d -p 8081:5000 mysampleimage:${CIRCLE_BUILD_NUM}
      - run:
          name: Apache2 reload
          command: echo ${PASSWORD} | sudo systemct reload apache2

      - run:
          name: Waiting to stable the app
          command: sleep 15
      - run:
          name: Stop and Remove Container Second
          command: |
            if [[ "$(docker ps --filter name=second -aq)" != "" ]]; then
              docker container stop $(docker ps --filter name=second -aq)
              sleep 5
              docker container rm $(docker ps --filter name=second -aq)
            fi
      - run:
          name: Apache2 reload
          command: echo ${PASSWORD} | sudo systemct reload apache2

      - run: 
          name: Run Container 2
          command: docker container run --name second -d -p 8082:5000 mysampleimage:${CIRCLE_BUILD_NUM}
      - run:
          name: Apache2 reload
          command: echo ${PASSWORD} | sudo systemct reload apache2

workflows:
  version: 2
  build-deploy:
    jobs:
      - runner-deploy
